= What is it =

Netmon - The new HIPS wannabe is actually a wannabe application initially
written for personal safety and to prevent self from 31337 people around
performing MiTM and other network traffic redirection attacks, or at least get
notified when such attacks are going on.

= Architecture =

Currently I am not a Network Security guru or anything even remotely close to
it, so I think I'll learn stuff eventually and add to it without much hassle so
Netmon is pretty much written in a modular architecture, with a basic
organization as follows:

* Netmon
 * Core
   * ui
   * module (redesign: Implements independent loosely coupled capabilities)
   * packet capturer |
   * packet decoder  |-- Closely coupled subsystems
   * packet analyzer |
 * UI - Mostly for messaging
   * Text (default)
   * GTK (planning)
 * Modules
   * Analysis
      * Dummy
      * ARP - ARP poinsoning detection module
      * DHCP - DHCP poisoning detection module (planning)
      * Shellcode - Exploitation attempt detection module (long term planning)
   * Decoder
      * Ethernet
      * ARP
      * ICMP
      * IP
      * TCP

= Core =

== Packet Subsystem ==

The packet subsystem is responsible for capturing a packet off the wire and
performing decoding, analysing using the registered decoder and analzer
functions.

The packet subsystem internally uses tower (array) for decoder managemenet. Each
decoder is reponsible for decoding a protocol in a layer/level as per OSI model
ie. there are 7 levels in the tower and each decoder is registered in any one of
the level in the tower.

Each decoder function receives a packet structure (struct packet) as its sole
argument when it is called. Each decoder should also return any one of the
following:

* DECODER_RET_SUCCESS: Successfully decoded the protocol for the level
* DECODER_RET_CONTINUE: Decoded partially, decoding must continue
* DECODER_RET_FAILED: Decoding failed for some reason

Each decoder should also remember that packet->lX_data is a pointer which is
intialized to be NULL by packet subsytem and as the packet traverses the decoder
tower, appropriate decoders are free to make approriate packet->lX_data point to
correct protocol header, but those structures must *always* be allocated with
malloc() since the packet subsystem free()'s the packet->lX_data pointers if not
set to NULL. (This design might be insecure and needs to be looked up)

The packet subsystem also provides specialized hooks for modules for performing
various operations. Following hooks are provided:

* Pre Decode Hook: Hook functions are called just after a packet is captured and
before any decoding is started.

* Post Decode Hook: Hook functions are called just after decoding is completed
on the packet.

* Post Analysis Hook: Hook functions are called just after analysis is completed
on the packet.

= UI =

= Modules =

= FAQ =

* How come this is an IPS? It doesn't prevent, it only detect right?
   * Currently yes, you are right. But may be.. just may be in future I might
   think about adding detection and prevention mechanism too.

* IDS/IPS technology is not something super new, elite h4x0rz (hi HD) has proven
  much of the technology to be easily bypassable.. so whats up with that?  Easy,
  fight to run away - I am writing this for my own pleasure

* Whats the purpose, will you tell me at all?

   * Yeah, I don't want idiots to read my traffic and SSH tunnels are not
   available everywhere. At least I want to be notified when wannabes are
   looking at my traffic. Don't want to let certified professionals get easy on
   PTs with Ettercap or Cain & Abel

* You work for a security company then why this hypocricy?
   * Good question, will think on it


