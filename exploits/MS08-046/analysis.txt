= Vulnerability Description =

The MS08-046 patch resolves a vulnerability in the Microsoft
Image Color Management (ICM) system that could allow remote code execution in
the context of the current user. If a user is logged on with administrative user
rights, an attacker who successfully exploited this vulnerability could take
complete control of an affected system. An attacker could then install programs;
view, change, or delete data; or create new accounts with full user rights.

= Technical Details =

The vulnerable code exists in OpenColorProfileW function in mscms.dll

Following is a disassembled code chunk from mscms.dll @ Windows XP-SP2 system,

.text:73B33A07                 lea     eax, [ebp+var_C]
.text:73B33A0A                 push    eax             ; PDWORD
.text:73B33A0B                 push    edi             ; PWSTR			<-- 0x104 bytes in Global Heap (pointed by edi)
.text:73B33A0C                 push    0               ; PCWSTR
.text:73B33A0E                 call    GetColorDirectoryW
.text:73B33A13                 push    offset asc_73B420B4 ; "\\"
.text:73B33A18                 push    edi             ; lpString1
.text:73B33A19                 mov     edi, ds:lstrcatW
.text:73B33A1F                 call    edi ; lstrcatW					<-- Append "\\" to buffer pointed by edi
.text:73B33A21                 push    dword ptr [ebx+0Ch] ; lpString2	<-- We control the data pointed by [ebx + 0x0C]
.text:73B33A24                 push    [ebp+lpString1] ; lpString1
.text:73B33A27                 call    edi ; lstrcatW					<-- Almost unbounded append (HEAP OVERFLOW)
.text:73B33A29                 push    dword ptr [ebx+0Ch] ; pMem
.text:73B33A2C                 call    sub_73B31C29						<-- [ebx+0x0C] is free'd here, might be an ideal place for AA4BMO
.text:73B33A31                 mov     eax, [ebp+lpString1]
.text:73B33A34                 mov     [ebx+0Ch], eax
.text:73B33A37                 mov     [ebx+10h], esi
.text:73B33A3A                 jmp     loc_73B31ED0

As it is evident the vulnerability occurs due to an unchecked string
concatenation to allocated memory on heap. It is possible to overwrite arbitrary
number of Heap Chunks and create a very controllable heap layout that can lead
to possible arbitrary code execution in certain version of Windows Operating
System (Windows XP-SP0 tested).

In case of Windows XP-SP2, safe unlinking prevents trivial exploitation of the
vulnerability, however modified version of techniques described in [3] might be 
employed to achieve successful exploitation even in Windows XP-SP2 systems given
the fact this vulnerability allows almost unlimited number of heap chunk
allocation through EMR records. This possibility is not tested currently.

= Impact =

This vulnerability can be exploited by forcing a victim to view a webpage
containing a malicious emf file or by sending an HTML e-mail with a malicious
emf file embedded.

= Proof Of Concept =

Refer to ms08-046.rb

= References =

[1] http://www.microsoft.com/technet/security/bulletin/ms08-046.mspx
[2] http://msdn2.microsoft.com/en-us/library/cc204166.aspx
[3] http://www.cybertech.net/~sh0ksh0k/heap/XPSP2%20Heap%20Exploitation.ppt

