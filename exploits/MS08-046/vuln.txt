In OpenColorProfileW@mscms.dll

.text:73B33A07                 lea     eax, [ebp+var_C]
.text:73B33A0A                 push    eax             ; PDWORD
.text:73B33A0B                 push    edi             ; PWSTR			<-- 0x104 bytes in Global Heap (pointed by edi)
.text:73B33A0C                 push    0               ; PCWSTR
.text:73B33A0E                 call    GetColorDirectoryW
.text:73B33A13                 push    offset asc_73B420B4 ; "\\"
.text:73B33A18                 push    edi             ; lpString1
.text:73B33A19                 mov     edi, ds:lstrcatW
.text:73B33A1F                 call    edi ; lstrcatW					<-- Append "\\" to buffer pointed by edi
.text:73B33A21                 push    dword ptr [ebx+0Ch] ; lpString2	<-- We control the data pointed by [ebx + 0x0C]
.text:73B33A24                 push    [ebp+lpString1] ; lpString1
.text:73B33A27                 call    edi ; lstrcatW					<-- Almost unbounded append (HEAP OVERFLOW)
.text:73B33A29                 push    dword ptr [ebx+0Ch] ; pMem
.text:73B33A2C                 call    sub_73B31C29						<-- [ebx+0x0C] is free'd here, might be an ideal place for AA4BMO
.text:73B33A31                 mov     eax, [ebp+lpString1]
.text:73B33A34                 mov     [ebx+0Ch], eax
.text:73B33A37                 mov     [ebx+10h], esi
.text:73B33A3A                 jmp     loc_73B31ED0

; MS08-046 Implements the fix:
.text:73B33A0C                 push    offset asc_73B420B4 ; "\\"
.text:73B33A11                 push    esi								<-- ESI contains size of allocated buffer
.text:73B33A12                 push    edi
.text:73B33A13                 call    sub_73B3609E
.text:73B33A18                 test    eax, eax
.text:73B33A1A                 jl      short loc_73B33A2A
.text:73B33A1C                 push    dword ptr [ebx+0Ch]
.text:73B33A1F                 push    esi
.text:73B33A20                 push    edi
.text:73B33A21                 call    sub_73B3609E
.text:73B33A26                 test    eax, eax
.text:73B33A28                 jge     short loc_73B33A37


; Trigger - The following code path can be used for exploitation
Call stack of thread 00000A3C
Address    Stack      Procedure / arguments                 Called from                   Frame
0188E814   77F2B655   73B31DB6                              GDI32.77F2B64F                0188E830
0188E834   77F2B824   GDI32.77F2B627                        GDI32.77F2B81F                0188E830
0188E850   77F2B71C   GDI32.77F2B72F                        GDI32.77F2B717                0188E84C
0188EAC0   77F41B55   GDI32.77F2B6AB                        GDI32.77F41B50                0188EABC
0188EAEC   77F41E5A   GDI32.77F41A4F                        GDI32.77F41E55                0188EAE8
0188EB08   77F4FD31   GDI32.77F41DFF                        GDI32.77F4FD2C                0188EB04
0188EF98   77F2121A   Includes GDI32.77F4FD31               GDI32.77F21213                0188EF94
0188F010   4ECD3C2A   GDI32.PlayEnhMetaFileRecord           gdiplus.4ECD3C24              0188F00C
0188F014   F8010639     hDC = F8010639
0188F018   00143678     pHandleTable = 00143678
0188F01C   001448B0     pMetaRecord = 001448B0
0188F020   00000007     nHandles = 7
0188F028   4ECD4B85   Includes gdiplus.4ECD3C2A             gdiplus.4ECD4B82              0188F054


Promising Code Path:

EnumColorProfilesW -> sub_73B33325 -> OpenColorProfileW
AssociateColorProfileWithDeviceA -> sub_73B38AB8 -> sub_73B37825 -> OpenColorProfileW 
