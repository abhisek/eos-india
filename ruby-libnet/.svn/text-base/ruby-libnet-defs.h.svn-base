void Init_libnet_defs(VALUE klass)
{
	rb_define_const(klass, "IPPROTO_IP", INT2FIX(0));
	rb_define_const(klass, "IPPROTO_ICMP", INT2FIX(1));
	rb_define_const(klass, "IPPROTO_IGMP", INT2FIX(2));
	rb_define_const(klass, "IPPROTO_IPIP", INT2FIX(3));
	rb_define_const(klass, "IPPROTO_TCP", INT2FIX(6));
	rb_define_const(klass, "IPPROTO_UDP", INT2FIX(17));
	rb_define_const(klass, "LIBNET_802_1Q_H", INT2FIX(0x12));
	rb_define_const(klass, "LIBNET_802_1X_H", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_802_2_H", INT2FIX(0x03));
	rb_define_const(klass, "LIBNET_802_2SNAP_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_802_3_H", INT2FIX(0x0e));
	rb_define_const(klass, "LIBNET_ARP_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_ARP_ETH_IP_H", INT2FIX(0x1c));
	rb_define_const(klass, "LIBNET_BGP4_HEADER_H", INT2FIX(0x13));
	rb_define_const(klass, "LIBNET_BGP4_OPEN_H", INT2FIX(0x0a));
	rb_define_const(klass, "LIBNET_BGP4_UPDATE_H", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_BGP4_NOTIFICATION_H", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_CDP_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_DHCPV4_H", INT2FIX(0xf0));
	rb_define_const(klass, "LIBNET_UDP_DNSV4_H", INT2FIX(0x0c));
	rb_define_const(klass, "LIBNET_TCP_DNSV4_H", INT2FIX(0x0e));
	rb_define_const(klass, "LIBNET_ETH_H", INT2FIX(0x0e));
	rb_define_const(klass, "LIBNET_FDDI_H", INT2FIX(0x15));
	rb_define_const(klass, "LIBNET_ICMPV4_H", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_ICMPV4_ECHO_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_ICMPV4_MASK_H", INT2FIX(0x0c));
	rb_define_const(klass, "LIBNET_ICMPV4_UNREACH_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_ICMPV4_TIMXCEED_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_ICMPV4_REDIRECT_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_ICMPV4_TS_H", INT2FIX(0x14));
	rb_define_const(klass, "LIBNET_ICMPV6_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_IGMP_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_IPV4_H", INT2FIX(0x14));
	rb_define_const(klass, "LIBNET_IPV6_H", INT2FIX(0x28));
	rb_define_const(klass, "LIBNET_IPV6_FRAG_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_IPV6_ROUTING_H", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_IPV6_DESTOPTS_H", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_IPV6_HBHOPTS_H", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_IPSEC_ESP_HDR_H", INT2FIX(0x0c));
	rb_define_const(klass, "LIBNET_IPSEC_ESP_FTR_H", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_IPSEC_AH_H", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_ISL_H", INT2FIX(0x1a));
	rb_define_const(klass, "LIBNET_GRE_H", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_GRE_SRE_H", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_MPLS_H", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_OSPF_H", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_OSPF_HELLO_H", INT2FIX(0x18));
	rb_define_const(klass, "LIBNET_OSPF_DBD_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_OSPF_LSR_H", INT2FIX(0x0c));
	rb_define_const(klass, "LIBNET_OSPF_LSU_H", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_OSPF_LSA_H", INT2FIX(0x14));
	rb_define_const(klass, "LIBNET_OSPF_AUTH_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_OSPF_CKSUM", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_OSPF_LS_RTR_H", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_OSPF_LS_NET_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_OSPF_LS_SUM_H", INT2FIX(0x0c));
	rb_define_const(klass, "LIBNET_OSPF_LS_AS_EXT_H", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_NTP_H", INT2FIX(0x30));
	rb_define_const(klass, "LIBNET_RIP_H", INT2FIX(0x18));
	rb_define_const(klass, "LIBNET_RPC_CALL_H", INT2FIX(0x28));
	rb_define_const(klass, "LIBNET_RPC_CALL_TCP_H", INT2FIX(0x2c));
	rb_define_const(klass, "LIBNET_SEBEK_H", INT2FIX(0x30));
	rb_define_const(klass, "LIBNET_STP_CONF_H", INT2FIX(0x23));
	rb_define_const(klass, "LIBNET_STP_TCN_H", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_TOKEN_RING_H", INT2FIX(0x16));
	rb_define_const(klass, "LIBNET_TCP_H", INT2FIX(0x14));
	rb_define_const(klass, "LIBNET_UDP_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_VRRP_H", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_802_1Q_PRIMASK", INT2FIX(0x0007));
	rb_define_const(klass, "LIBNET_802_1Q_CFIMASK", INT2FIX(0x0001));
	rb_define_const(klass, "LIBNET_802_1Q_VIDMASK", INT2FIX(0x0fff));
	rb_define_const(klass, "LIBNET_802_1X_PACKET", INT2FIX(0x00));
	rb_define_const(klass, "LIBNET_802_1X_START", INT2FIX(0x01));
	rb_define_const(klass, "LIBNET_802_1X_LOGOFF", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_802_1X_KEY", INT2FIX(0x03));
	rb_define_const(klass, "LIBNET_802_1X_ENCASFAL", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_SAP_STP", INT2FIX(0x42));
	rb_define_const(klass, "LIBNET_SAP_SNAP", INT2FIX(0xaa));
	rb_define_const(klass, "ARPHRD_NETROM", INT2FIX(0));
	rb_define_const(klass, "ARPHRD_ETHER", INT2FIX(1));
	rb_define_const(klass, "ARPHRD_EETHER", INT2FIX(2));
	rb_define_const(klass, "ARPHRD_AX25", INT2FIX(3));
	rb_define_const(klass, "ARPHRD_PRONET", INT2FIX(4));
	rb_define_const(klass, "ARPHRD_CHAOS", INT2FIX(5));
	rb_define_const(klass, "ARPHRD_IEEE802", INT2FIX(6));
	rb_define_const(klass, "ARPHRD_ARCNET", INT2FIX(7));
	rb_define_const(klass, "ARPHRD_APPLETLK", INT2FIX(8));
	rb_define_const(klass, "ARPHRD_LANSTAR", INT2FIX(9));
	rb_define_const(klass, "ARPHRD_DLCI", INT2FIX(15));
	rb_define_const(klass, "ARPHRD_ATM", INT2FIX(19));
	rb_define_const(klass, "ARPHRD_METRICOM", INT2FIX(23));
	rb_define_const(klass, "ARPHRD_IPSEC", INT2FIX(31));
	rb_define_const(klass, "ARPOP_REQUEST", INT2FIX(1));
	rb_define_const(klass, "ARPOP_REPLY", INT2FIX(2));
	rb_define_const(klass, "ARPOP_REVREQUEST", INT2FIX(3));
	rb_define_const(klass, "ARPOP_REVREPLY", INT2FIX(4));
	rb_define_const(klass, "ARPOP_INVREQUEST", INT2FIX(8));
	rb_define_const(klass, "ARPOP_INVREPLY", INT2FIX(9));
	rb_define_const(klass, "LIBNET_BGP4_MARKER_SIZE", INT2FIX(16));
	rb_define_const(klass, "LIBNET_BGP4_OPEN", INT2FIX(1));
	rb_define_const(klass, "LIBNET_BGP4_UPDATE", INT2FIX(2));
	rb_define_const(klass, "LIBNET_BGP4_NOTIFICATION", INT2FIX(3));
	rb_define_const(klass, "LIBNET_BGP4_KEEPALIVE", INT2FIX(4));
	rb_define_const(klass, "LIBNET_BGP4_MESSAGE_HEADER_ERROR", INT2FIX(1));
	rb_define_const(klass, "LIBNET_BGP4_OPEN_MESSAGE_ERROR", INT2FIX(2));
	rb_define_const(klass, "LIBNET_BGP4_UPDATE_MESSAGE_ERROR", INT2FIX(3));
	rb_define_const(klass, "LIBNET_BGP4_HOLD_TIMER_EXPIRED", INT2FIX(4));
	rb_define_const(klass, "LIBNET_BGP4_FINITE_STATE__ERROR", INT2FIX(5));
	rb_define_const(klass, "LIBNET_BGP4_CEASE", INT2FIX(6));
	rb_define_const(klass, "LIBNET_BGP4_CONNECTION_NOT_SYNCHRONIZED", INT2FIX(1));
	rb_define_const(klass, "LIBNET_BGP4_BAD_MESSAGE_LENGTH", INT2FIX(2));
	rb_define_const(klass, "LIBNET_BGP4_BAD_MESSAGE_TYPE", INT2FIX(3));
	rb_define_const(klass, "LIBNET_BGP4_UNSUPPORTED_VERSION_NUMBER", INT2FIX(1));
	rb_define_const(klass, "LIBNET_BGP4_BAD_PEER_AS", INT2FIX(2));
	rb_define_const(klass, "LIBNET_BGP4_BAD_BGP_IDENTIFIER", INT2FIX(3));
	rb_define_const(klass, "LIBNET_BGP4_UNSUPPORTED_OPTIONAL_PARAMETER", INT2FIX(4));
	rb_define_const(klass, "LIBNET_BGP4_AUTHENTICATION_FAILURE", INT2FIX(5));
	rb_define_const(klass, "LIBNET_BGP4_UNACCEPTABLE_HOLD_TIME", INT2FIX(6));
	rb_define_const(klass, "LIBNET_PROTO_CDP", INT2FIX(200));
	rb_define_const(klass, "LIBNET_CDP_DEVID", INT2FIX(0x1));
	rb_define_const(klass, "LIBNET_CDP_ADDRESS", INT2FIX(0x2));
	rb_define_const(klass, "LIBNET_CDP_PORTID", INT2FIX(0x3));
	rb_define_const(klass, "LIBNET_CDP_CAPABIL", INT2FIX(0x4));
	rb_define_const(klass, "LIBNET_CDP_VERSION", INT2FIX(0x5));
	rb_define_const(klass, "LIBNET_CDP_PLATFORM", INT2FIX(0x6));
	rb_define_const(klass, "LIBNET_CDP_IPPREFIX", INT2FIX(0x7));
	rb_define_const(klass, "LIBNET_CDP_CAP_L3R", INT2FIX(0x01));
	rb_define_const(klass, "LIBNET_CDP_CAP_L2B", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_CDP_CAP_L2SRB", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_CDP_CAP_L2S", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_CDP_CAP_SR", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_CDP_CAP_NOI", INT2FIX(0x20));
	rb_define_const(klass, "LIBNET_CDP_CAP_L1F", INT2FIX(0x40));
	rb_define_const(klass, "LIBNET_DHCP_REQUEST", INT2FIX(0x1));
	rb_define_const(klass, "LIBNET_DHCP_REPLY", INT2FIX(0x2));
	rb_define_const(klass, "DHCP_MAGIC", INT2FIX(0x63825363));
	rb_define_const(klass, "LIBNET_BOOTP_MIN_LEN", INT2FIX(0x12c));
	rb_define_const(klass, "LIBNET_DHCP_PAD", INT2FIX(0x00));
	rb_define_const(klass, "LIBNET_DHCP_SUBNETMASK", INT2FIX(0x01));
	rb_define_const(klass, "LIBNET_DHCP_TIMEOFFSET", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_DHCP_ROUTER", INT2FIX(0x03));
	rb_define_const(klass, "LIBNET_DHCP_TIMESERVER", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_DHCP_NAMESERVER", INT2FIX(0x05));
	rb_define_const(klass, "LIBNET_DHCP_DNS", INT2FIX(0x06));
	rb_define_const(klass, "LIBNET_DHCP_LOGSERV", INT2FIX(0x07));
	rb_define_const(klass, "LIBNET_DHCP_COOKIESERV", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_DHCP_LPRSERV", INT2FIX(0x09));
	rb_define_const(klass, "LIBNET_DHCP_IMPSERV", INT2FIX(0x0a));
	rb_define_const(klass, "LIBNET_DHCP_RESSERV", INT2FIX(0x0b));
	rb_define_const(klass, "LIBNET_DHCP_HOSTNAME", INT2FIX(0x0c));
	rb_define_const(klass, "LIBNET_DHCP_BOOTFILESIZE", INT2FIX(0x0d));
	rb_define_const(klass, "LIBNET_DHCP_DUMPFILE", INT2FIX(0x0e));
	rb_define_const(klass, "LIBNET_DHCP_DOMAINNAME", INT2FIX(0x0f));
	rb_define_const(klass, "LIBNET_DHCP_SWAPSERV", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_DHCP_ROOTPATH", INT2FIX(0x11));
	rb_define_const(klass, "LIBNET_DHCP_EXTENPATH", INT2FIX(0x12));
	rb_define_const(klass, "LIBNET_DHCP_IPFORWARD", INT2FIX(0x13));
	rb_define_const(klass, "LIBNET_DHCP_SRCROUTE", INT2FIX(0x14));
	rb_define_const(klass, "LIBNET_DHCP_POLICYFILTER", INT2FIX(0x15));
	rb_define_const(klass, "LIBNET_DHCP_MAXASMSIZE", INT2FIX(0x16));
	rb_define_const(klass, "LIBNET_DHCP_IPTTL", INT2FIX(0x17));
	rb_define_const(klass, "LIBNET_DHCP_MTUTIMEOUT", INT2FIX(0x18));
	rb_define_const(klass, "LIBNET_DHCP_MTUTABLE", INT2FIX(0x19));
	rb_define_const(klass, "LIBNET_DHCP_MTUSIZE", INT2FIX(0x1a));
	rb_define_const(klass, "LIBNET_DHCP_LOCALSUBNETS", INT2FIX(0x1b));
	rb_define_const(klass, "LIBNET_DHCP_BROADCASTADDR", INT2FIX(0x1c));
	rb_define_const(klass, "LIBNET_DHCP_DOMASKDISCOV", INT2FIX(0x1d));
	rb_define_const(klass, "LIBNET_DHCP_MASKSUPPLY", INT2FIX(0x1e));
	rb_define_const(klass, "LIBNET_DHCP_DOROUTEDISC", INT2FIX(0x1f));
	rb_define_const(klass, "LIBNET_DHCP_ROUTERSOLICIT", INT2FIX(0x20));
	rb_define_const(klass, "LIBNET_DHCP_STATICROUTE", INT2FIX(0x21));
	rb_define_const(klass, "LIBNET_DHCP_TRAILERENCAP", INT2FIX(0x22));
	rb_define_const(klass, "LIBNET_DHCP_ARPTIMEOUT", INT2FIX(0x23));
	rb_define_const(klass, "LIBNET_DHCP_ETHERENCAP", INT2FIX(0x24));
	rb_define_const(klass, "LIBNET_DHCP_TCPTTL", INT2FIX(0x25));
	rb_define_const(klass, "LIBNET_DHCP_TCPKEEPALIVE", INT2FIX(0x26));
	rb_define_const(klass, "LIBNET_DHCP_TCPALIVEGARBAGE", INT2FIX(0x27));
	rb_define_const(klass, "LIBNET_DHCP_NISDOMAIN", INT2FIX(0x28));
	rb_define_const(klass, "LIBNET_DHCP_NISSERVERS", INT2FIX(0x29));
	rb_define_const(klass, "LIBNET_DHCP_NISTIMESERV", INT2FIX(0x2a));
	rb_define_const(klass, "LIBNET_DHCP_VENDSPECIFIC", INT2FIX(0x2b));
	rb_define_const(klass, "LIBNET_DHCP_NBNS", INT2FIX(0x2c));
	rb_define_const(klass, "LIBNET_DHCP_NBDD", INT2FIX(0x2d));
	rb_define_const(klass, "LIBNET_DHCP_NBTCPIP", INT2FIX(0x2e));
	rb_define_const(klass, "LIBNET_DHCP_NBTCPSCOPE", INT2FIX(0x2f));
	rb_define_const(klass, "LIBNET_DHCP_XFONT", INT2FIX(0x30));
	rb_define_const(klass, "LIBNET_DHCP_XDISPLAYMGR", INT2FIX(0x31));
	rb_define_const(klass, "LIBNET_DHCP_DISCOVERADDR", INT2FIX(0x32));
	rb_define_const(klass, "LIBNET_DHCP_LEASETIME", INT2FIX(0x33));
	rb_define_const(klass, "LIBNET_DHCP_OPTIONOVERLOAD", INT2FIX(0x34));
	rb_define_const(klass, "LIBNET_DHCP_MESSAGETYPE", INT2FIX(0x35));
	rb_define_const(klass, "LIBNET_DHCP_SERVIDENT", INT2FIX(0x36));
	rb_define_const(klass, "LIBNET_DHCP_PARAMREQUEST", INT2FIX(0x37));
	rb_define_const(klass, "LIBNET_DHCP_MESSAGE", INT2FIX(0x38));
	rb_define_const(klass, "LIBNET_DHCP_MAXMSGSIZE", INT2FIX(0x39));
	rb_define_const(klass, "LIBNET_DHCP_RENEWTIME", INT2FIX(0x3a));
	rb_define_const(klass, "LIBNET_DHCP_REBINDTIME", INT2FIX(0x3b));
	rb_define_const(klass, "LIBNET_DHCP_CLASSSID", INT2FIX(0x3c));
	rb_define_const(klass, "LIBNET_DHCP_CLIENTID", INT2FIX(0x3d));
	rb_define_const(klass, "LIBNET_DHCP_NISPLUSDOMAIN", INT2FIX(0x40));
	rb_define_const(klass, "LIBNET_DHCP_NISPLUSSERVERS", INT2FIX(0x41));
	rb_define_const(klass, "LIBNET_DHCP_MOBILEIPAGENT", INT2FIX(0x44));
	rb_define_const(klass, "LIBNET_DHCP_SMTPSERVER", INT2FIX(0x45));
	rb_define_const(klass, "LIBNET_DHCP_POP3SERVER", INT2FIX(0x46));
	rb_define_const(klass, "LIBNET_DHCP_NNTPSERVER", INT2FIX(0x47));
	rb_define_const(klass, "LIBNET_DHCP_WWWSERVER", INT2FIX(0x48));
	rb_define_const(klass, "LIBNET_DHCP_FINGERSERVER", INT2FIX(0x49));
	rb_define_const(klass, "LIBNET_DHCP_IRCSERVER", INT2FIX(0x4a));
	rb_define_const(klass, "LIBNET_DHCP_STSERVER", INT2FIX(0x4b));
	rb_define_const(klass, "LIBNET_DHCP_STDASERVER", INT2FIX(0x4c));
	rb_define_const(klass, "LIBNET_DHCP_END", INT2FIX(0xff));
	rb_define_const(klass, "LIBNET_DHCP_MSGDISCOVER", INT2FIX(0x01));
	rb_define_const(klass, "LIBNET_DHCP_MSGOFFER", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_DHCP_MSGREQUEST", INT2FIX(0x03));
	rb_define_const(klass, "LIBNET_DHCP_MSGDECLINE", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_DHCP_MSGACK", INT2FIX(0x05));
	rb_define_const(klass, "LIBNET_DHCP_MSGNACK", INT2FIX(0x06));
	rb_define_const(klass, "LIBNET_DHCP_MSGRELEASE", INT2FIX(0x07));
	rb_define_const(klass, "LIBNET_DHCP_MSGINFORM", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_DNS_H", INT2FIX(LIBNET_UDP_DNSV4_H));
	rb_define_const(klass, "ETHERTYPE_PUP", INT2FIX(0x0200));
	rb_define_const(klass, "ETHERTYPE_IP", INT2FIX(0x0800));
	rb_define_const(klass, "ETHERTYPE_ARP", INT2FIX(0x0806));
	rb_define_const(klass, "ETHERTYPE_REVARP", INT2FIX(0x8035));
	rb_define_const(klass, "ETHERTYPE_VLAN", INT2FIX(0x8100));
	rb_define_const(klass, "ETHERTYPE_EAP", INT2FIX(0x888e));
	rb_define_const(klass, "ETHERTYPE_MPLS", INT2FIX(0x8847));
	rb_define_const(klass, "ETHERTYPE_LOOPBACK", INT2FIX(0x9000));
	rb_define_const(klass, "LIBNET_FDDI_LLC_FRAME", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_FDDI_48BIT_ADDR", INT2FIX(0x40));
	rb_define_const(klass, "LIBNET_FDDI_FC_REQD", INT2FIX(LIBNET_FDDI_LLC_FRAME));
	rb_define_const(klass, "FDDI_TYPE_IP", INT2FIX(0x0800));
	rb_define_const(klass, "FDDI_TYPE_ARP", INT2FIX(0x0806));
	rb_define_const(klass, "FDDI_TYPE_REVARP", INT2FIX(0x8035));
	rb_define_const(klass, "GRE_CSUM", INT2FIX(0x8000));
	rb_define_const(klass, "GRE_ROUTING", INT2FIX(0x4000));
	rb_define_const(klass, "GRE_KEY", INT2FIX(0x2000));
	rb_define_const(klass, "GRE_SEQ", INT2FIX(0x1000));
	rb_define_const(klass, "GRE_STRICT", INT2FIX(0x0800));
	rb_define_const(klass, "GRE_REC", INT2FIX(0x0700));
	rb_define_const(klass, "GRE_ACK", INT2FIX(0x0080));
	rb_define_const(klass, "GRE_FLAGS_MASK", INT2FIX(0x00F8));
	rb_define_const(klass, "GRE_VERSION_MASK", INT2FIX(0x0007));
	rb_define_const(klass, "GRE_VERSION_0", INT2FIX(0x0000));
	rb_define_const(klass, "GRE_VERSION_1", INT2FIX(0x0001));
	rb_define_const(klass, "GRE_SNA", INT2FIX(0x0004));
	rb_define_const(klass, "GRE_OSI_NETWORK_LAYER", INT2FIX(0x00FE));
	rb_define_const(klass, "GRE_PUP", INT2FIX(0x0200));
	rb_define_const(klass, "GRE_XNS", INT2FIX(0x0600));
	rb_define_const(klass, "GRE_IP", INT2FIX(0x0800));
	rb_define_const(klass, "GRE_CHAOS", INT2FIX(0x0804));
	rb_define_const(klass, "GRE_RFC_826_ARP", INT2FIX(0x0806));
	rb_define_const(klass, "GRE_FRAME_RELAY_ARP", INT2FIX(0x0808));
	rb_define_const(klass, "GRE_VINES", INT2FIX(0x0BAD));
	rb_define_const(klass, "GRE_VINES_ECHO", INT2FIX(0x0BAE));
	rb_define_const(klass, "GRE_VINES_LOOPBACK", INT2FIX(0x0BAF));
	rb_define_const(klass, "GRE_DECNET", INT2FIX(0x6003));
	rb_define_const(klass, "GRE_TRANSPARENT_ETHERNET_BRIDGING", INT2FIX(0x6558));
	rb_define_const(klass, "GRE_RAW_FRAME_RELAY", INT2FIX(0x6559));
	rb_define_const(klass, "GRE_APOLLO_DOMAIN", INT2FIX(0x8019));
	rb_define_const(klass, "GRE_ETHERTALK", INT2FIX(0x809B));
	rb_define_const(klass, "GRE_NOVELL_IPX", INT2FIX(0x8137));
	rb_define_const(klass, "GRE_RFC_1144_TCP_IP_COMPRESSION", INT2FIX(0x876B));
	rb_define_const(klass, "GRE_IP_AUTONOMOUS_SYSTEMS", INT2FIX(0x876C));
	rb_define_const(klass, "GRE_SECURE_DATA", INT2FIX(0x876D));
	rb_define_const(klass, "GRE_PPP", INT2FIX(0x880b));
	rb_define_const(klass, "IPPROTO_GRE", INT2FIX(47));
	rb_define_const(klass, "IPTOS_LOWDELAY", INT2FIX(0x10));
	rb_define_const(klass, "IPTOS_THROUGHPUT", INT2FIX(0x08));
	rb_define_const(klass, "IPTOS_RELIABILITY", INT2FIX(0x04));
	rb_define_const(klass, "IPTOS_LOWCOST", INT2FIX(0x02));
	rb_define_const(klass, "IP_RF", INT2FIX(0x8000));
	rb_define_const(klass, "IP_DF", INT2FIX(0x4000));
	rb_define_const(klass, "IP_MF", INT2FIX(0x2000));
	rb_define_const(klass, "IP_OFFMASK", INT2FIX(0x1fff));
	rb_define_const(klass, "IPOPT_EOL", INT2FIX(0));
	rb_define_const(klass, "IPOPT_NOP", INT2FIX(1));
	rb_define_const(klass, "IPOPT_RR", INT2FIX(7));
	rb_define_const(klass, "IPOPT_TS", INT2FIX(68));
	rb_define_const(klass, "IPOPT_SECURITY", INT2FIX(130));
	rb_define_const(klass, "IPOPT_LSRR", INT2FIX(131));
	rb_define_const(klass, "IPOPT_SATID", INT2FIX(136));
	rb_define_const(klass, "IPOPT_SSRR", INT2FIX(137));
	rb_define_const(klass, "LIBNET_IPV6_NH_FRAGMENT", INT2FIX(44));
	rb_define_const(klass, "LIBNET_IPV6_NH_ROUTING", INT2FIX(43));
	rb_define_const(klass, "LIBNET_IPV6_NH_DESTOPTS", INT2FIX(60));
	rb_define_const(klass, "LIBNET_IPV6_NH_HBH", INT2FIX(0));
	rb_define_const(klass, "IPPROTO_ICMP6", INT2FIX(0x3a));
	rb_define_const(klass, "ICMP6_ECHO", INT2FIX(128));
	rb_define_const(klass, "ICMP6_ECHOREPLY", INT2FIX(129));
	rb_define_const(klass, "ICMP6_UNREACH", INT2FIX(1));
	rb_define_const(klass, "ICMP6_PKTTOOBIG", INT2FIX(2));
	rb_define_const(klass, "ICMP6_TIMXCEED", INT2FIX(3));
	rb_define_const(klass, "ICMP6_PARAMPROB", INT2FIX(4));
	rb_define_const(klass, "ICMP_ECHOREPLY", INT2FIX(0));
	rb_define_const(klass, "ICMP_UNREACH", INT2FIX(3));
	rb_define_const(klass, "ICMP_SOURCEQUENCH", INT2FIX(4));
	rb_define_const(klass, "ICMP_REDIRECT", INT2FIX(5));
	rb_define_const(klass, "ICMP_ECHO", INT2FIX(8));
	rb_define_const(klass, "ICMP_ROUTERADVERT", INT2FIX(9));
	rb_define_const(klass, "ICMP_ROUTERSOLICIT", INT2FIX(10));
	rb_define_const(klass, "ICMP_TIMXCEED", INT2FIX(11));
	rb_define_const(klass, "ICMP_PARAMPROB", INT2FIX(12));
	rb_define_const(klass, "ICMP_TSTAMP", INT2FIX(13));
	rb_define_const(klass, "ICMP_TSTAMPREPLY", INT2FIX(14));
	rb_define_const(klass, "ICMP_IREQ", INT2FIX(15));
	rb_define_const(klass, "ICMP_IREQREPLY", INT2FIX(16));
	rb_define_const(klass, "ICMP_MASKREQ", INT2FIX(17));
	rb_define_const(klass, "ICMP_MASKREPLY", INT2FIX(18));
	rb_define_const(klass, "ICMP_UNREACH_NET", INT2FIX(0));
	rb_define_const(klass, "ICMP_UNREACH_HOST", INT2FIX(1));
	rb_define_const(klass, "ICMP_UNREACH_PROTOCOL", INT2FIX(2));
	rb_define_const(klass, "ICMP_UNREACH_PORT", INT2FIX(3));
	rb_define_const(klass, "ICMP_UNREACH_NEEDFRAG", INT2FIX(4));
	rb_define_const(klass, "ICMP_UNREACH_SRCFAIL", INT2FIX(5));
	rb_define_const(klass, "ICMP_UNREACH_NET_UNKNOWN", INT2FIX(6));
	rb_define_const(klass, "ICMP_UNREACH_HOST_UNKNOWN", INT2FIX(7));
	rb_define_const(klass, "ICMP_UNREACH_ISOLATED", INT2FIX(8));
	rb_define_const(klass, "ICMP_UNREACH_NET_PROHIB", INT2FIX(9));
	rb_define_const(klass, "ICMP_UNREACH_HOST_PROHIB", INT2FIX(10));
	rb_define_const(klass, "ICMP_UNREACH_TOSNET", INT2FIX(11));
	rb_define_const(klass, "ICMP_UNREACH_TOSHOST", INT2FIX(12));
	rb_define_const(klass, "ICMP_UNREACH_FILTER_PROHIB", INT2FIX(13));
	rb_define_const(klass, "ICMP_UNREACH_HOST_PRECEDENCE", INT2FIX(14));
	rb_define_const(klass, "ICMP_UNREACH_PRECEDENCE_CUTOFF", INT2FIX(15));
	rb_define_const(klass, "ICMP_REDIRECT_NET", INT2FIX(0));
	rb_define_const(klass, "ICMP_REDIRECT_HOST", INT2FIX(1));
	rb_define_const(klass, "ICMP_REDIRECT_TOSNET", INT2FIX(2));
	rb_define_const(klass, "ICMP_REDIRECT_TOSHOST", INT2FIX(3));
	rb_define_const(klass, "ICMP_TIMXCEED_INTRANS", INT2FIX(0));
	rb_define_const(klass, "ICMP_TIMXCEED_REASS", INT2FIX(1));
	rb_define_const(klass, "ICMP_PARAMPROB_OPTABSENT", INT2FIX(1));
	rb_define_const(klass, "IGMP_MEMBERSHIP_QUERY", INT2FIX(0x11));
	rb_define_const(klass, "IGMP_V1_MEMBERSHIP_REPORT", INT2FIX(0x12));
	rb_define_const(klass, "IGMP_V2_MEMBERSHIP_REPORT", INT2FIX(0x16));
	rb_define_const(klass, "IGMP_LEAVE_GROUP", INT2FIX(0x17));
	rb_define_const(klass, "IPPROTO_ESP", INT2FIX(50));
	rb_define_const(klass, "IPPROTO_AH", INT2FIX(51));
	rb_define_const(klass, "LIBNET_PROTO_ISL", INT2FIX(201));
	rb_define_const(klass, "IPPROTO_OSPF", INT2FIX(89));
	rb_define_const(klass, "IPPROTO_OSPF_LSA", INT2FIX(890));
	rb_define_const(klass, "LIBNET_MODX", INT2FIX(4102));
	rb_define_const(klass, "LIBNET_OPT_EBIT", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_OPT_MCBIT", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_OPT_NPBIT", INT2FIX(0x08));
	rb_define_const(klass, "LIBNET_OPT_EABIT", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_OPT_DCBIT", INT2FIX(0x20));
	rb_define_const(klass, "LIBNET_MPLS_BOS_ON", INT2FIX(1));
	rb_define_const(klass, "LIBNET_MPLS_BOS_OFF", INT2FIX(0));
	rb_define_const(klass, "LIBNET_NTP_LI_NW", INT2FIX(0x0));
	rb_define_const(klass, "LIBNET_NTP_LI_AS", INT2FIX(0x1));
	rb_define_const(klass, "LIBNET_NTP_LI_DS", INT2FIX(0x2));
	rb_define_const(klass, "LIBNET_NTP_LI_AC", INT2FIX(0x3));
	rb_define_const(klass, "LIBNET_NTP_VN_2", INT2FIX(0x2));
	rb_define_const(klass, "LIBNET_NTP_VN_3", INT2FIX(0x3));
	rb_define_const(klass, "LIBNET_NTP_VN_4", INT2FIX(0x4));
	rb_define_const(klass, "LIBNET_NTP_MODE_R", INT2FIX(0x0));
	rb_define_const(klass, "LIBNET_NTP_MODE_A", INT2FIX(0x1));
	rb_define_const(klass, "LIBNET_NTP_MODE_P", INT2FIX(0x2));
	rb_define_const(klass, "LIBNET_NTP_MODE_C", INT2FIX(0x3));
	rb_define_const(klass, "LIBNET_NTP_MODE_S", INT2FIX(0x4));
	rb_define_const(klass, "LIBNET_NTP_MODE_B", INT2FIX(0x5));
	rb_define_const(klass, "LIBNET_NTP_MODE_RC", INT2FIX(0x6));
	rb_define_const(klass, "LIBNET_NTP_MODE_RP", INT2FIX(0x7));
	rb_define_const(klass, "LIBNET_NTP_STRATUM_UNAVAIL", INT2FIX(0x0));
	rb_define_const(klass, "LIBNET_NTP_STRATUM_PRIMARY", INT2FIX(0x1));
	rb_define_const(klass, "LIBNET_NTP_REF_LOCAL", INT2FIX(0x4c4f434c));
	rb_define_const(klass, "LIBNET_NTP_REF_PPS", INT2FIX(0x50505300));
	rb_define_const(klass, "LIBNET_NTP_REF_ACTS", INT2FIX(0x41435453));
	rb_define_const(klass, "LIBNET_NTP_REF_USNO", INT2FIX(0x55534e4f));
	rb_define_const(klass, "LIBNET_NTP_REF_PTB", INT2FIX(0x50544200));
	rb_define_const(klass, "LIBNET_NTP_REF_TDF", INT2FIX(0x54444600));
	rb_define_const(klass, "LIBNET_NTP_REF_DCF", INT2FIX(0x44434600));
	rb_define_const(klass, "LIBNET_NTP_REF_MSF", INT2FIX(0x4d534600));
	rb_define_const(klass, "LIBNET_NTP_REF_WWV", INT2FIX(0x57575600));
	rb_define_const(klass, "LIBNET_NTP_REF_WWVB", INT2FIX(0x57575642));
	rb_define_const(klass, "LIBNET_NTP_REF_WWVH", INT2FIX(0x57575648));
	rb_define_const(klass, "LIBNET_NTP_REF_CHU", INT2FIX(0x43485500));
	rb_define_const(klass, "LIBNET_NTP_REF_LORC", INT2FIX(0x4c4f5243));
	rb_define_const(klass, "LIBNET_NTP_REF_OMEG", INT2FIX(0x4f4d4547));
	rb_define_const(klass, "LIBNET_NTP_REF_GPS", INT2FIX(0x47505300));
	rb_define_const(klass, "LIBNET_NTP_REF_GOES", INT2FIX(0x474f4553));
	rb_define_const(klass, "OSPFVERSION", INT2FIX(2));
	rb_define_const(klass, "LIBNET_OSPF_UMD", INT2FIX(0));
	rb_define_const(klass, "LIBNET_OSPF_HELLO", INT2FIX(1));
	rb_define_const(klass, "LIBNET_OSPF_DBD", INT2FIX(2));
	rb_define_const(klass, "LIBNET_OSPF_LSR", INT2FIX(3));
	rb_define_const(klass, "LIBNET_OSPF_LSU", INT2FIX(4));
	rb_define_const(klass, "LIBNET_OSPF_LSA", INT2FIX(5));
	rb_define_const(klass, "LIBNET_OSPF_AUTH_NULL", INT2FIX(0));
	rb_define_const(klass, "LIBNET_OSPF_AUTH_SIMPLE", INT2FIX(1));
	rb_define_const(klass, "LIBNET_OSPF_AUTH_MD5", INT2FIX(2));
	rb_define_const(klass, "LIBNET_DBD_IBI", INT2FIX(0x01));
	rb_define_const(klass, "LIBNET_DBD_MBIT", INT2FIX(0x02));
	rb_define_const(klass, "LIBNET_DBD_MSBIT", INT2FIX(0x04));
	rb_define_const(klass, "LIBNET_LS_TYPE_RTR", INT2FIX(1));
	rb_define_const(klass, "LIBNET_LS_TYPE_NET", INT2FIX(2));
	rb_define_const(klass, "LIBNET_LS_TYPE_IP", INT2FIX(3));
	rb_define_const(klass, "LIBNET_LS_TYPE_ASBR", INT2FIX(4));
	rb_define_const(klass, "LIBNET_LS_TYPE_ASEXT", INT2FIX(5));
	rb_define_const(klass, "LIBNET_RTR_FLAGS_W", INT2FIX(0x0100));
	rb_define_const(klass, "LIBNET_RTR_FLAGS_E", INT2FIX(0x0200));
	rb_define_const(klass, "LIBNET_RTR_FLAGS_B", INT2FIX(0x0400));
	rb_define_const(klass, "LIBNET_LINK_ID_NBR_ID", INT2FIX(1));
	rb_define_const(klass, "LIBNET_LINK_ID_IP_DES", INT2FIX(2));
	rb_define_const(klass, "LIBNET_LINK_ID_SUB", INT2FIX(3));
	rb_define_const(klass, "LIBNET_RTR_TYPE_PTP", INT2FIX(1));
	rb_define_const(klass, "LIBNET_RTR_TYPE_TRANS", INT2FIX(2));
	rb_define_const(klass, "LIBNET_RTR_TYPE_STUB", INT2FIX(3));
	rb_define_const(klass, "RTR_TYPE_VRTL", INT2FIX(4));
	rb_define_const(klass, "LIBNET_AS_E_BIT_ON", INT2FIX(0x80000000));
	rb_define_const(klass, "RIPCMD_REQUEST", INT2FIX(1));
	rb_define_const(klass, "RIPCMD_RESPONSE", INT2FIX(2));
	rb_define_const(klass, "RIPCMD_TRACEON", INT2FIX(3));
	rb_define_const(klass, "RIPCMD_TRACEOFF", INT2FIX(4));
	rb_define_const(klass, "RIPCMD_POLL", INT2FIX(5));
	rb_define_const(klass, "RIPCMD_POLLENTRY", INT2FIX(6));
	rb_define_const(klass, "RIPCMD_MAX", INT2FIX(7));
	rb_define_const(klass, "RIPVER_0", INT2FIX(0));
	rb_define_const(klass, "RIPVER_1", INT2FIX(1));
	rb_define_const(klass, "RIPVER_2", INT2FIX(2));
	rb_define_const(klass, "LIBNET_RPC_CALL", INT2FIX(0));
	rb_define_const(klass, "LIBNET_RPC_REPLY", INT2FIX(1));
	rb_define_const(klass, "LIBNET_RPC_VERS", INT2FIX(2));
	rb_define_const(klass, "LIBNET_RPC_LAST_FRAG", INT2FIX(0x80000000));
	rb_define_const(klass, "LIBNET_PMAP_PROGRAM", INT2FIX(100000));
	rb_define_const(klass, "LIBNET_PMAP_PROC_NULL", INT2FIX(0));
	rb_define_const(klass, "LIBNET_PMAP_PROC_SET", INT2FIX(1));
	rb_define_const(klass, "LIBNET_PMAP_PROC_UNSET", INT2FIX(2));
	rb_define_const(klass, "LIBNET_PMAP_PROC_GETADDR", INT2FIX(3));
	rb_define_const(klass, "LIBNET_PMAP_PROC_DUMP", INT2FIX(4));
	rb_define_const(klass, "LIBNET_PMAP_PROC_CALLIT", INT2FIX(5));
	rb_define_const(klass, "LIBNET_PMAP_PROC_BCAST", INT2FIX(5));
	rb_define_const(klass, "LIBNET_PMAP_PROC_GETTIME", INT2FIX(6));
	rb_define_const(klass, "LIBNET_PMAP_PROC_UADDR2TADDR", INT2FIX(7));
	rb_define_const(klass, "LIBNET_PMAP_PROC_TADDR2UADDR", INT2FIX(8));
	rb_define_const(klass, "LIBNET_PMAP_PROC_GETVERSADDR", INT2FIX(9));
	rb_define_const(klass, "LIBNET_PMAP_PROC_INDIRECT", INT2FIX(10));
	rb_define_const(klass, "LIBNET_PMAP_PROC_GETADDRLIST", INT2FIX(11));
	rb_define_const(klass, "LIBNET_PMAP_PROC_GETSTAT", INT2FIX(12));
	rb_define_const(klass, "TH_FIN", INT2FIX(0x01));
	rb_define_const(klass, "TH_SYN", INT2FIX(0x02));
	rb_define_const(klass, "TH_RST", INT2FIX(0x04));
	rb_define_const(klass, "TH_PUSH", INT2FIX(0x08));
	rb_define_const(klass, "TH_ACK", INT2FIX(0x10));
	rb_define_const(klass, "TH_URG", INT2FIX(0x20));
	rb_define_const(klass, "TH_ECE", INT2FIX(0x40));
	rb_define_const(klass, "TH_CWR", INT2FIX(0x80));
	rb_define_const(klass, "LIBNET_TOKEN_RING_FRAME", INT2FIX(0x10));
	rb_define_const(klass, "LIBNET_TOKEN_RING_LLC_FRAME", INT2FIX(0x40));
	rb_define_const(klass, "TOKEN_RING_TYPE_IP", INT2FIX(0x0800));
	rb_define_const(klass, "TOKEN_RING_TYPE_ARP", INT2FIX(0x0806));
	rb_define_const(klass, "TOKEN_RING_TYPE_REVARP", INT2FIX(0x8035));
	rb_define_const(klass, "SEBEK_PROTO_VERSION", INT2FIX(1));
	rb_define_const(klass, "SEBEK_TYPE_READ", INT2FIX(0));
	rb_define_const(klass, "SEBEK_TYPE_WRITE", INT2FIX(1));
	rb_define_const(klass, "SEBEK_CMD_LENGTH", INT2FIX(12));
	rb_define_const(klass, "IPPROTO_VRRP", INT2FIX(112));
	rb_define_const(klass, "LIBNET_VRRP_VERSION_01", INT2FIX(0x1));
	rb_define_const(klass, "LIBNET_VRRP_VERSION_02", INT2FIX(0x2));
	rb_define_const(klass, "LIBNET_VRRP_TYPE_ADVERT", INT2FIX(0x1));
	rb_define_const(klass, "LIBNET_VRRP_AUTH_NONE", INT2FIX(0x1));
	rb_define_const(klass, "LIBNET_VRRP_AUTH_PASSWD", INT2FIX(0x2));
	rb_define_const(klass, "LIBNET_VRRP_AUTH_IPAH", INT2FIX(0x3));
}
